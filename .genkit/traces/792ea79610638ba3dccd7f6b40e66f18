{"traceId":"792ea79610638ba3dccd7f6b40e66f18","spans":{"7ec1fdd9bd9ba134":{"spanId":"7ec1fdd9bd9ba134","traceId":"792ea79610638ba3dccd7f6b40e66f18","parentSpanId":"0aec0118b8ec9365","startTime":1754252895213,"endTime":1754252895213.3225,"attributes":{"next.span_name":"resolve page components","next.span_type":"NextNodeServer.findPageComponents","next.route":"/convo-tree-v1"},"displayName":"resolve page components","links":[],"instrumentationLibrary":{"name":"next.js","version":"0.0.1"},"spanKind":"INTERNAL","sameProcessAsParentSpan":{"value":true},"status":{"code":0},"timeEvents":{"timeEvent":[]}},"adc9312cdce300d5":{"spanId":"adc9312cdce300d5","traceId":"792ea79610638ba3dccd7f6b40e66f18","parentSpanId":"0aec0118b8ec9365","startTime":1754252895381,"endTime":1754252895381.0212,"attributes":{"next.span_name":"start response","next.span_type":"NextNodeServer.startResponse"},"displayName":"start response","links":[],"instrumentationLibrary":{"name":"next.js","version":"0.0.1"},"spanKind":"INTERNAL","sameProcessAsParentSpan":{"value":true},"status":{"code":0},"timeEvents":{"timeEvent":[]}},"0aec0118b8ec9365":{"spanId":"0aec0118b8ec9365","traceId":"792ea79610638ba3dccd7f6b40e66f18","startTime":1754252895171,"endTime":1754252895384.2612,"attributes":{"next.span_name":"POST /convo-tree-v1","next.span_type":"BaseServer.handleRequest","http.method":"POST","http.target":"/convo-tree-v1","http.status_code":500,"next.rsc":false,"next.route":"/convo-tree-v1","http.route":"/convo-tree-v1"},"displayName":"POST /convo-tree-v1","links":[],"instrumentationLibrary":{"name":"next.js","version":"0.0.1"},"spanKind":"SERVER","sameProcessAsParentSpan":{"value":true},"status":{"code":2,"message":"INVALID_ARGUMENT: Schema validation failed. Parse Errors:\n\n- state: must have required property 'turns'\n\nProvided data:\n\n{\n  \"state\": {\n    \"currentId\": \"node1\",\n    \"convoTree\": {\n      \"root\": \"node1\",\n      \"nodes\": {\n        \"node1\": {\n          \"id\": \"node1\"\n        }\n      },\n      \"edges\": {}\n    },\n    \"npcState\": {\n      \"name\": \"Benny\",\n      \"description\": \"Benny is a professional chef with a passion for cooking.\",\n      \"facts\": [\n        \"I know the best recipe for pizza.\"\n      ],\n      \"mood\": \"neutral\"\n    }\n  },\n  \"prompt\": \"what does \\\"acquisitions\\\" mean?\"\n}\n\nRequired JSON schema:\n\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"state\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"turns\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"params\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"prompt\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"prompt\"\n                ],\n                \"additionalProperties\": true\n              },\n              \"actions\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"anyOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"followEdge\"\n                          ]\n                        },\n                        \"edgeId\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\n                        \"type\",\n                        \"edgeId\"\n                      ],\n                      \"additionalProperties\": true\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"chat\"\n                          ]\n                        },\n                        \"response\": {\n                          \"type\": \"string\"\n                        },\n                        \"diffs\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"anyOf\": [\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"type\": {\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                      \"learnFact\"\n                                    ]\n                                  },\n                                  \"fact\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"type\",\n                                  \"fact\"\n                                ],\n                                \"additionalProperties\": true\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"type\": {\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                      \"learnFact\"\n                                    ]\n                                  },\n                                  \"fact\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"type\",\n                                  \"fact\"\n                                ],\n                                \"additionalProperties\": true\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      \"required\": [\n                        \"type\",\n                        \"response\",\n                        \"diffs\"\n                      ],\n                      \"additionalProperties\": true\n                    }\n                  ]\n                }\n              }\n            },\n            \"required\": [\n              \"params\",\n              \"actions\"\n            ],\n            \"additionalProperties\": true\n          }\n        },\n        \"convoTree\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"root\": {\n              \"type\": \"string\"\n            },\n            \"nodes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ],\n                \"additionalProperties\": true\n              }\n            },\n            \"edges\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"sourceId\": {\n                    \"type\": \"string\"\n                  },\n                  \"targetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"when this predicate is satisfied at source node, then follow this edge to the target node\"\n                  },\n                  \"preds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"anyOf\": [\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"knowsFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        },\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"knowsFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        }\n                      ]\n                    },\n                    \"description\": \"when this edge is followed, applies this diff to the current npc state\"\n                  },\n                  \"diffs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"anyOf\": [\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"learnFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        },\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"learnFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        }\n                      ]\n                    }\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"sourceId\",\n                  \"targetId\",\n                  \"preds\",\n                  \"diffs\"\n                ],\n                \"additionalProperties\": true\n              }\n            }\n          },\n          \"required\": [\n            \"root\",\n            \"nodes\",\n            \"edges\"\n          ],\n          \"additionalProperties\": true\n        },\n        \"currentId\": {\n          \"type\": \"string\"\n        },\n        \"npcState\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            },\n            \"mood\": {\n              \"type\": \"string\",\n              \"description\": \"current mood of the npc\"\n            },\n            \"facts\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"facts that the npc knows\"\n            }\n          },\n          \"required\": [\n            \"name\",\n            \"description\",\n            \"mood\",\n            \"facts\"\n          ],\n          \"additionalProperties\": true\n        }\n      },\n      \"required\": [\n        \"turns\",\n        \"convoTree\",\n        \"currentId\",\n        \"npcState\"\n      ],\n      \"additionalProperties\": true\n    },\n    \"prompt\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"state\",\n    \"prompt\"\n  ],\n  \"additionalProperties\": true,\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\"\n}"},"timeEvents":{"timeEvent":[{"time":1754252895243.8179,"annotation":{"attributes":{"exception.type":"400","exception.message":"INVALID_ARGUMENT: Schema validation failed. Parse Errors:\n\n- state: must have required property 'turns'\n\nProvided data:\n\n{\n  \"state\": {\n    \"currentId\": \"node1\",\n    \"convoTree\": {\n      \"root\": \"node1\",\n      \"nodes\": {\n        \"node1\": {\n          \"id\": \"node1\"\n        }\n      },\n      \"edges\": {}\n    },\n    \"npcState\": {\n      \"name\": \"Benny\",\n      \"description\": \"Benny is a professional chef with a passion for cooking.\",\n      \"facts\": [\n        \"I know the best recipe for pizza.\"\n      ],\n      \"mood\": \"neutral\"\n    }\n  },\n  \"prompt\": \"what does \\\"acquisitions\\\" mean?\"\n}\n\nRequired JSON schema:\n\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"state\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"turns\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"params\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"prompt\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"prompt\"\n                ],\n                \"additionalProperties\": true\n              },\n              \"actions\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"anyOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"followEdge\"\n                          ]\n                        },\n                        \"edgeId\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\n                        \"type\",\n                        \"edgeId\"\n                      ],\n                      \"additionalProperties\": true\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"chat\"\n                          ]\n                        },\n                        \"response\": {\n                          \"type\": \"string\"\n                        },\n                        \"diffs\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"anyOf\": [\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"type\": {\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                      \"learnFact\"\n                                    ]\n                                  },\n                                  \"fact\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"type\",\n                                  \"fact\"\n                                ],\n                                \"additionalProperties\": true\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"type\": {\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                      \"learnFact\"\n                                    ]\n                                  },\n                                  \"fact\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"type\",\n                                  \"fact\"\n                                ],\n                                \"additionalProperties\": true\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      \"required\": [\n                        \"type\",\n                        \"response\",\n                        \"diffs\"\n                      ],\n                      \"additionalProperties\": true\n                    }\n                  ]\n                }\n              }\n            },\n            \"required\": [\n              \"params\",\n              \"actions\"\n            ],\n            \"additionalProperties\": true\n          }\n        },\n        \"convoTree\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"root\": {\n              \"type\": \"string\"\n            },\n            \"nodes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ],\n                \"additionalProperties\": true\n              }\n            },\n            \"edges\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"sourceId\": {\n                    \"type\": \"string\"\n                  },\n                  \"targetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"when this predicate is satisfied at source node, then follow this edge to the target node\"\n                  },\n                  \"preds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"anyOf\": [\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"knowsFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        },\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"knowsFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        }\n                      ]\n                    },\n                    \"description\": \"when this edge is followed, applies this diff to the current npc state\"\n                  },\n                  \"diffs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"anyOf\": [\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"learnFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        },\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"learnFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        }\n                      ]\n                    }\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"sourceId\",\n                  \"targetId\",\n                  \"preds\",\n                  \"diffs\"\n                ],\n                \"additionalProperties\": true\n              }\n            }\n          },\n          \"required\": [\n            \"root\",\n            \"nodes\",\n            \"edges\"\n          ],\n          \"additionalProperties\": true\n        },\n        \"currentId\": {\n          \"type\": \"string\"\n        },\n        \"npcState\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            },\n            \"mood\": {\n              \"type\": \"string\",\n              \"description\": \"current mood of the npc\"\n            },\n            \"facts\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"facts that the npc knows\"\n            }\n          },\n          \"required\": [\n            \"name\",\n            \"description\",\n            \"mood\",\n            \"facts\"\n          ],\n          \"additionalProperties\": true\n        }\n      },\n      \"required\": [\n        \"turns\",\n        \"convoTree\",\n        \"currentId\",\n        \"npcState\"\n      ],\n      \"additionalProperties\": true\n    },\n    \"prompt\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"state\",\n    \"prompt\"\n  ],\n  \"additionalProperties\": true,\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\"\n}","exception.stacktrace":"GenkitError: INVALID_ARGUMENT: Schema validation failed. Parse Errors:\n\n- state: must have required property 'turns'\n\nProvided data:\n\n{\n  \"state\": {\n    \"currentId\": \"node1\",\n    \"convoTree\": {\n      \"root\": \"node1\",\n      \"nodes\": {\n        \"node1\": {\n          \"id\": \"node1\"\n        }\n      },\n      \"edges\": {}\n    },\n    \"npcState\": {\n      \"name\": \"Benny\",\n      \"description\": \"Benny is a professional chef with a passion for cooking.\",\n      \"facts\": [\n        \"I know the best recipe for pizza.\"\n      ],\n      \"mood\": \"neutral\"\n    }\n  },\n  \"prompt\": \"what does \\\"acquisitions\\\" mean?\"\n}\n\nRequired JSON schema:\n\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"state\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"turns\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"params\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"prompt\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"prompt\"\n                ],\n                \"additionalProperties\": true\n              },\n              \"actions\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"anyOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"followEdge\"\n                          ]\n                        },\n                        \"edgeId\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\n                        \"type\",\n                        \"edgeId\"\n                      ],\n                      \"additionalProperties\": true\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"chat\"\n                          ]\n                        },\n                        \"response\": {\n                          \"type\": \"string\"\n                        },\n                        \"diffs\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"anyOf\": [\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"type\": {\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                      \"learnFact\"\n                                    ]\n                                  },\n                                  \"fact\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"type\",\n                                  \"fact\"\n                                ],\n                                \"additionalProperties\": true\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"type\": {\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                      \"learnFact\"\n                                    ]\n                                  },\n                                  \"fact\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"type\",\n                                  \"fact\"\n                                ],\n                                \"additionalProperties\": true\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      \"required\": [\n                        \"type\",\n                        \"response\",\n                        \"diffs\"\n                      ],\n                      \"additionalProperties\": true\n                    }\n                  ]\n                }\n              }\n            },\n            \"required\": [\n              \"params\",\n              \"actions\"\n            ],\n            \"additionalProperties\": true\n          }\n        },\n        \"convoTree\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"root\": {\n              \"type\": \"string\"\n            },\n            \"nodes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ],\n                \"additionalProperties\": true\n              }\n            },\n            \"edges\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"sourceId\": {\n                    \"type\": \"string\"\n                  },\n                  \"targetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"when this predicate is satisfied at source node, then follow this edge to the target node\"\n                  },\n                  \"preds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"anyOf\": [\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"knowsFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        },\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"knowsFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        }\n                      ]\n                    },\n                    \"description\": \"when this edge is followed, applies this diff to the current npc state\"\n                  },\n                  \"diffs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"anyOf\": [\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"learnFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        },\n                        {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"learnFact\"\n                              ]\n                            },\n                            \"fact\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"type\",\n                            \"fact\"\n                          ],\n                          \"additionalProperties\": true\n                        }\n                      ]\n                    }\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"sourceId\",\n                  \"targetId\",\n                  \"preds\",\n                  \"diffs\"\n                ],\n                \"additionalProperties\": true\n              }\n            }\n          },\n          \"required\": [\n            \"root\",\n            \"nodes\",\n            \"edges\"\n          ],\n          \"additionalProperties\": true\n        },\n        \"currentId\": {\n          \"type\": \"string\"\n        },\n        \"npcState\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            },\n            \"mood\": {\n              \"type\": \"string\",\n              \"description\": \"current mood of the npc\"\n            },\n            \"facts\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"facts that the npc knows\"\n            }\n          },\n          \"required\": [\n            \"name\",\n            \"description\",\n            \"mood\",\n            \"facts\"\n          ],\n          \"additionalProperties\": true\n        }\n      },\n      \"required\": [\n        \"turns\",\n        \"convoTree\",\n        \"currentId\",\n        \"npcState\"\n      ],\n      \"additionalProperties\": true\n    },\n    \"prompt\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"state\",\n    \"prompt\"\n  ],\n  \"additionalProperties\": true,\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\"\n}\n    at parseSchema (/Users/henryblanchette/Documents/small-language-games-v2/.next/server/chunks/ssr/node_modules_@genkit-ai_core_lib_b4b8dea8._.js:606:23)\n    at actionFn.run (/Users/henryblanchette/Documents/small-language-games-v2/.next/server/chunks/ssr/node_modules_@genkit-ai_core_lib_b4b8dea8._.js:1702:55)\n    at Module.actionFn (/Users/henryblanchette/Documents/small-language-games-v2/.next/server/chunks/ssr/node_modules_@genkit-ai_core_lib_b4b8dea8._.js:1694:40)\n    at Object.generateActions (/Users/henryblanchette/Documents/small-language-games-v2/.next/server/chunks/ssr/[root-of-the-server]__4da0a156._.js:970:203)\n    at Server.actInst (/Users/henryblanchette/Documents/small-language-games-v2/.next/server/chunks/ssr/[root-of-the-server]__4da0a156._.js:391:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async endpoint (/Users/henryblanchette/Documents/small-language-games-v2/.next/server/chunks/ssr/[root-of-the-server]__4da0a156._.js:1001:12)\n    at async executeActionAndPrepareForRender (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/compiled/next-server/app-page-turbo.runtime.dev.js:33:4432)\n    at async /Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/compiled/next-server/app-page-turbo.runtime.dev.js:33:2264\n    at async handleAction (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/compiled/next-server/app-page-turbo.runtime.dev.js:32:23711)\n    at async renderToHTMLOrFlightImpl (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/compiled/next-server/app-page-turbo.runtime.dev.js:38:30115)\n    at async doRender (/Users/henryblanchette/Documents/small-language-games-v2/.next/server/chunks/ssr/node_modules_next_dist_e9e5531b._.js:2423:28)\n    at async AppPageRouteModule.handleResponse (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/compiled/next-server/app-page-turbo.runtime.dev.js:40:57928)\n    at async handleResponse (/Users/henryblanchette/Documents/small-language-games-v2/.next/server/chunks/ssr/node_modules_next_dist_e9e5531b._.js:2569:32)\n    at async handler (/Users/henryblanchette/Documents/small-language-games-v2/.next/server/chunks/ssr/node_modules_next_dist_e9e5531b._.js:2944:13)\n    at async doRender (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/base-server.js:1587:34)\n    at async DevServer.renderToResponseWithComponentsImpl (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/base-server.js:1929:13)\n    at async DevServer.renderPageComponent (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/base-server.js:2395:24)\n    at async DevServer.renderToResponseImpl (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/base-server.js:2435:32)\n    at async DevServer.pipeImpl (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/base-server.js:1035:25)\n    at async NextNodeServer.handleCatchallRenderRequest (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/next-server.js:393:17)\n    at async DevServer.handleRequestImpl (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/base-server.js:925:17)\n    at async /Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/dev/next-dev-server.js:398:20\n    at async Span.traceAsyncFn (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/trace/trace.js:157:20)\n    at async DevServer.handleRequest (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/dev/next-dev-server.js:394:24)\n    at async invokeRender (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/lib/router-server.js:239:21)\n    at async handleRequest (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/lib/router-server.js:436:24)\n    at async requestHandlerImpl (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/lib/router-server.js:464:13)\n    at async Server.requestListener (/Users/henryblanchette/Documents/small-language-games-v2/node_modules/next/dist/server/lib/start-server.js:218:13)"},"description":"exception"}}]}}},"displayName":"POST /convo-tree-v1","startTime":1754252895171,"endTime":1754252895384.2612}